{
  "info": {
    "_postman_id": "e5a7b8c9-d0f1-4e23-a456-789b0c1d2e3f",
    "name": "Snackbar Management API Gateway",
    "description": "Collection for testing the Snackbar Management API through API Gateway",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "https://api-gateway-url.execute-api.region.amazonaws.com",
      "type": "string",
      "description": "API Gateway endpoint URL"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_cpf",
      "value": "52998224725",
      "type": "string"
    },
    {
      "key": "user_password",
      "value": "Password123!",
      "type": "string"
    },
    {
      "key": "user_new_password",
      "value": "NewPassword123!",
      "type": "string"
    },
    {
      "key": "product_category",
      "value": "Bebida",
      "type": "string"
    },
    {
      "key": "product_name",
      "value": "Hamb√∫rguer",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "1. Health Check",
      "item": [
        {
          "name": "Check API Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "health"
              ]
            },
            "description": "Check if the API is up and running"
          },
          "response": []
        }
      ],
      "description": "Verify the API is operational"
    },
    {
      "name": "2. Authentication",
      "item": [
        {
          "name": "Register New User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"testuser@example.com\",\n    \"cpf\": \"{{user_cpf}}\",\n    \"password\": \"{{user_password}}\",\n    \"role\": \"ADMIN\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/signup",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "signup"
              ]
            },
            "description": "Register a new user in the system"
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Response has token\", function () {",
                  "    pm.expect(jsonData).to.have.property('token');",
                  "});",
                  "",
                  "if (jsonData.token) {",
                  "    pm.collectionVariables.set(\"token\", jsonData.token);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"cpf\": \"{{user_cpf}}\",\n    \"password\": \"{{user_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/login",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "login"
              ]
            },
            "description": "Authenticate a user and get a JWT token"
          },
          "response": []
        }
      ],
      "description": "User registration and authentication"
    },
    {
      "name": "3. Product Management",
      "item": [
        {
          "name": "Get All Products",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/product",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "product"
              ]
            },
            "description": "Get a list of all products"
          },
          "response": []
        },
        {
          "name": "Create New Product",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "var jsonData = pm.response.json();",
                  "if (jsonData && jsonData.id) {",
                  "    pm.collectionVariables.set(\"product_id\", jsonData.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{product_name}}\",\n    \"description\": \"Delicious hamburger with cheese\",\n    \"category\": \"{{product_category}}\",\n    \"price\": 15.99,\n    \"available\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/product",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "product"
              ]
            },
            "description": "Create a new product"
          },
          "response": []
        },
        {
          "name": "Get Product by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/product/id/{{product_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "product",
                "id",
                "{{product_id}}"
              ]
            },
            "description": "Get a product by its ID"
          },
          "response": []
        },
        {
          "name": "Get Products by Category",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/product/category/{{product_category}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "product",
                "category",
                "{{product_category}}"
              ]
            },
            "description": "Get products by category"
          },
          "response": []
        },
        {
          "name": "Get Product by Name",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/product/name/{{product_name}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "product",
                "name",
                "{{product_name}}"
              ]
            },
            "description": "Get a product by its name"
          },
          "response": []
        },
        {
          "name": "Update Product",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{product_name}} Updated\",\n    \"description\": \"Updated description\",\n    \"category\": \"{{product_category}}\",\n    \"price\": 17.99,\n    \"available\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/product/id/{{product_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "product",
                "id",
                "{{product_id}}"
              ]
            },
            "description": "Update an existing product"
          },
          "response": []
        },
        {
          "name": "Delete Product",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/product/id/{{product_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "product",
                "id",
                "{{product_id}}"
              ]
            },
            "description": "Delete a product by its ID"
          },
          "response": []
        }
      ],
      "description": "Operations for managing products"
    },
    {
      "name": "4. User Management",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/user",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "user"
              ]
            },
            "description": "Get a list of all users"
          },
          "response": []
        },
        {
          "name": "Get User by CPF",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "var jsonData = pm.response.json();",
                  "if (jsonData && jsonData.id) {",
                  "    pm.collectionVariables.set(\"user_id\", jsonData.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/user/cpf/{{user_cpf}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "user",
                "cpf",
                "{{user_cpf}}"
              ]
            },
            "description": "Get a user by CPF"
          },
          "response": []
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Test User\",\n    \"email\": \"updatedtestuser@example.com\",\n    \"password\": \"{{user_new_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/user/{{user_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "user",
                "{{user_id}}"
              ]
            },
            "description": "Update an existing user"
          },
          "response": []
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/user/{{user_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "user",
                "{{user_id}}"
              ]
            },
            "description": "Delete a user by ID"
          },
          "response": []
        }
      ],
      "description": "Operations for managing users"
    }
  ]
}
